# Scan this file for changes every 30 seconds
refresh_rate: 30 seconds

appenders:
  # An appender named "stdout" that writes to stdout
  stderr:
    kind: console
    target: stderr

  # default zellij appender, should be used across most of the codebase.
  logFile:
    kind: file
    path: "zellij.log"
    append: false
    encoder:
      # {n} means platform dependent newline
      pattern: "|{module}| {date} {highlight({level})} [{thread}] [{file}:{line}]: {message} {n}"

  # plugin appender. To be used in decorating_pipe to forward stderr output from plugins.
  logPlugin:
    kind: file
    path: "zellij.log"
    encoder:
      # {n} means platform dependent newline
      pattern: "{message} {n}"

# Set the default logging level to "info" and log it to zellij.log file
root:
  level: info
  appenders:
    - logFile

loggers:
  # decrease verbosity for this module because it has a lot of useless info logs
  wasmer_compiler_cranelift:
    level: warn
    appenders:
      - logFile

  # For decorating_pipe, we use custom format as we use logging macros to forward stderr output from plugins
  zellij_server::decorating_pipe:
    level: trace
    appenders:
      - logPlugin
    additive: false
